<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kernemporium</title>
    <link>/</link>
    <description>Recent content on kernemporium</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© linKERN Emporium 2021</copyright>
    <lastBuildDate>Wed, 31 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Automatic unpacking with Qiling framework</title>
      <link>/posts/unpacking/</link>
      <pubDate>Wed, 31 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>/posts/unpacking/</guid>
      <description>Welcome folks, today I want to show you a few tricks about automatic unpacking on elf executables with qiling framework !
EDIT: This Write-Up is working only with a particular (and ancient) version of the qiling framwork. So if you want a full working poc, run the final script in my docker image.
Introduction to automatic unpacking The automatic unpacking is the art of extracting certain informations from an obfuscated executable, to subsquently make another binary more easily readable.</description>
    </item>
    
    <item>
      <title>Intro</title>
      <link>/heap/intro/</link>
      <pubDate>Wed, 31 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>/heap/intro/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Introduction to kernel exploitation</title>
      <link>/kernel/intro/</link>
      <pubDate>Wed, 31 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>/kernel/intro/</guid>
      <description>What is kernel exploitation ?! Vulnerable syscalls Kernel exploitation is the exploitation of security flaws in ring 0. The techniques used in order to exploit this kind of vulnerability are a bit different from exploiting a userland application. And when you begin, it can be a bit hard to understand. In ring 0 or in &amp;ldquo;kernel land&amp;rdquo; relies the internals of your operating system. For example a userland application pass execution to kernel land for many purposes, such hardware access or native/privileged features of your operating system:</description>
    </item>
    
    <item>
      <title>Whoami</title>
      <link>/whoami/whoami/</link>
      <pubDate>Wed, 31 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>/whoami/whoami/</guid>
      <description>Our team :
 nasm : 17 yo, I love Reverse Engineering &amp;amp; Binary Exploitation 0poss : 18 yo, I love Reverse Engineering &amp;amp; Compilers &amp;amp; Binary Exploitation  The goal of this website is to share knowledge around kernel &amp;amp; heap exploitation, it&amp;rsquo;s splitted in three part :
 The articles on subjects like kernel &amp;amp; heap exploitation which are made in order to learn to you how to exploit a special kind of vulnerabilitie.</description>
    </item>
    
  </channel>
</rss>
